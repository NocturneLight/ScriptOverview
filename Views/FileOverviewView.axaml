<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:ScriptOverview.Views"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="ScriptOverview.Views.FileOverviewView"
             xmlns:vm="using:ScriptOverview.ViewModels"
             x:DataType="vm:FileOverviewViewModel">

  <Design.DataContext>
    <vm:FileOverviewViewModel />
  </Design.DataContext>

  <SplitView IsPaneOpen="True"
             DisplayMode="Inline"
             PaneBackground="#100010"
             OpenPaneLength="500">
    <!--
    SplitView with the left side showing options for the user,
    and the right side showing the contents of the document opened.
    -->
    <SplitView.Pane>
      <StackPanel Spacing="15" 
                  VerticalAlignment="Center">
      
        <!--Message informing the user that they should do something.-->
        <Label Content="{Binding Message}" 
               HorizontalAlignment="Center" />
      
        <!--Button that parses the docx file for potential actors.-->
        <Button Content="Get List of Actors in Document" 
                HorizontalAlignment="Center"
                Command="{Binding GetActorsCommand}"
                CommandParameter="{Binding $parent[Window]}" />
      
        <!--
        Button that takes a file and converts it to a
        nani script for use in Unity projects.
        -->
        <Button Content="Convert Document to Naniscript" 
                HorizontalAlignment="Center"
                Command="{Binding SaveToNaniScriptCommand}" 
                CommandParameter="{Binding $parent[Window]}" />
        
        <!--Button to go back to the File Select view.-->
        <Button Content="Back" 
                HorizontalAlignment="Center"
                Margin="0, 20, 0, 0"
                Command="{Binding GoToViewCommand}" 
                CommandParameter="{Binding $parent[Window]}"/>
      </StackPanel>
    </SplitView.Pane>

    <!--
    Displays the entire string list containing the 
    contents of the docx file the user chose.
    -->
    <ListBox ItemsSource="{Binding FormattedDocumentContents}"
             MaxHeight="800" 
             Background="Transparent"
             AutoScrollToSelectedItem="True"
             ScrollViewer.HorizontalScrollBarVisibility="Auto"
             IsTextSearchEnabled="True" />
  </SplitView>
</UserControl>
